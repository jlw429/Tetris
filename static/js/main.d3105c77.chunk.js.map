{"version":3,"sources":["gameHelpers.js","images/bg.png","components/styles/StyledTetris.js","images/tetris.jpg","components/styles/StyledStage.js","components/styles/StyledCell.js","tetrominos.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","hooks/useStage.js","hooks/useGameStatus.js","components/Tetris.js","hooks/usePlayer.js","hooks/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImg","StyledTetris","StyledStage","props","height","width","StyledCell","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","Cell","React","memo","Stage","map","row","cell","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","clearRows","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3105c77.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\n\r\nexport const createStage = () =>\r\n  Array.from(Array(STAGE_HEIGHT), () =>\r\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\r\n  );\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\r\n  for (let y = 0; y < player.tetromino.length; y+= 1) {\r\n    for (let x = 0; x < player.tetromino[y].length; x+= 1) {\r\n\r\n      //Check were on tetronmino cell\r\n      if(player.tetromino[y][x] !== 0) {\r\n        //Check move inside areas height(y) \r\n        //dont go through bottom of play area\r\n        if(\r\n        !stage[y + player.pos.y + moveY] || \r\n        //dont go through left and right side\r\n        !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\r\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    \r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from 'styled-components';\r\nimport bgImg from '../../images/bg.png';\r\nimport tetImg from '../../images/tetris.jpg';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: url(${bgImg}) #000;\r\n  background-size: cover;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const StyledTetris = styled.div`\r\n  display: flex;\r\n  align-items: flex-start;\r\n  padding: 40px;\r\n  margin: 0 auto;\r\n  max-width: 900px;\r\n\r\n  aside {\r\n    width: 100%;\r\n    max-width: 200px;\r\n    display: block;\r\n    padding: 0 20px;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/tetris.ac161a90.jpg\";","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n  display: grid;\r\n  grid-template-rows: repeat(\r\n    ${(props) => props.height},\r\n    calc(25vw / ${(props) => props.width})\r\n  );\r\n  grid-template-columns: repeat(${(props) => props.width}, 1fr);\r\n  grid-gap: 1px;\r\n  border: 2px solid #333;\r\n  width: 100%;\r\n  max-width: 25vw;\r\n  background: #111;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n  width: auto;\r\n  background: rgba(${(props) => props.color}, 0.8);\r\n  border: ${(props) => (props.type === 0 ? '0px solid' : '4px solid')};\r\n  border-bottom-color: rgba(${(props) => props.color}, 0.1);\r\n  border-right-color: rgba(${(props) => props.color}, 1);\r\n  border-top-color: rgba(${(props) => props.color}, 1);\r\n  border-left-color: rgba(${(props) => props.color}, 0.3);\r\n`;\r\n","export const TETROMINOS = {\r\n  0: { shape: [[0]], color: '0, 0, 0' },\r\n  I: {\r\n    shape: [\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0],\r\n      [0, 'I', 0, 0],\r\n    ],\r\n    color: '80, 227, 230',\r\n  },\r\n  J: {\r\n    shape: [\r\n      [0, 'J', 0],\r\n      [0, 'J', 0],\r\n      ['J', 'J', 0],\r\n    ],\r\n    color: '36, 95, 223',\r\n  },\r\n  L: {\r\n    shape: [\r\n      [0, 'L', 0],\r\n      [0, 'L', 0],\r\n      [0, 'L', 'L'],\r\n    ],\r\n    color: '223, 173, 36',\r\n  },\r\n  O: {\r\n    shape: [\r\n      ['O', 'O'],\r\n      ['O', 'O'],\r\n    ],\r\n    color: '223, 217, 36',\r\n  },\r\n  S: {\r\n    shape: [\r\n      [0, 'S', 'S'],\r\n      ['S', 'S', 0],\r\n      [0, 0, 0],\r\n    ],\r\n    color: '48, 211, 56',\r\n  },\r\n  T: {\r\n    shape: [\r\n      [0, 0, 0],\r\n      ['T', 'T', 'T'],\r\n      [0, 'T', 0],\r\n    ],\r\n    color: '132, 61, 198',\r\n  },\r\n  Z: {\r\n    shape: [\r\n      ['Z', 'Z', 0],\r\n      [0, 'Z', 'Z'],\r\n      [0, 0, 0],\r\n    ],\r\n    color: '227, 78, 78',\r\n  },\r\n};\r\n\r\nexport const randomTetromino = () => {\r\n    const tetrominos = 'IJLOSTZ';\r\n    const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)]\r\n    return TETROMINOS[randTetromino]\r\n}\r\n","import React from 'react';\r\nimport { StyledCell } from './styles/StyledCell';\r\nimport { TETROMINOS } from '../tetrominos';\r\n\r\nconst Cell = ({ type }) => (\r\n  <StyledCell type={type} color={TETROMINOS[type].color} />\r\n);\r\nexport default React.memo(Cell);\r\n","import React from 'react';\r\nimport { StyledStage } from './styles/StyledStage';\r\n\r\nimport Cell from './Cell';\r\n\r\nconst Stage = ({ stage }) => (\r\n  <StyledStage width={stage[0].length} height={stage.length}>\r\n    {stage.map((row) => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\r\n  </StyledStage>\r\n);\r\nexport default Stage;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n  box=sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0, 0, 20px, 0;\r\n  padding: 15px;\r\n  border: 4px solid #333;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 30px;\r\n  color: ${(props) => (props.gameOver ? 'red' : '#999')};\r\n  background: #000;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 0.8 rem;\r\n  margin-bottom: 20px;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledDisplay } from './styles/StyledDisplay';\r\n\r\nconst Display = ({ gameOver, text }) => (\r\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\r\n);\r\n\r\nexport default Display;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n  box-sizing: border-box;\r\n  margin: 0, 0, 20px, 0;\r\n  padding: 20px;\r\n  min-height: 30px;\r\n  width: 100%;\r\n  border-radius: 30px;\r\n  border: none;\r\n  color: white;\r\n  background: #333;\r\n  font-family: Pixel, Arial, Helvetica, sans-serif;\r\n  font-size: 1 rem;\r\n  outline: none;\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react';\r\nimport { StyledStartButton } from './styles/StyledStartButton';\r\n\r\nconst StartButton = ({ callback }) => (\r\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\r\n);\r\n\r\nexport default StartButton;\r\n","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelpers';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n  const [stage, setStage] = useState(createStage());\r\n  const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setRowsCleared(0);\r\n\r\n    const clearRows = (newStage) =>\r\n      newStage.reduce((ack, row) => {\r\n        if (row.findIndex((cell) => cell[0] === 0) === -1) {\r\n          setRowsCleared((prev) => prev + 1);\r\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n          return ack;\r\n        }\r\n        ack.push(row);\r\n        return ack;\r\n      }, []);\r\n\r\n    const updateStage = (prevStage) => {\r\n      //First clear the stage from prev render\r\n      const newStage = prevStage.map((row) =>\r\n        row.map((cell) => (cell[1] === 'clear' ? [0, 'clear'] : cell))\r\n      );\r\n      //Draw the new stage\r\n      player.tetromino.forEach((row, y) => {\r\n        row.forEach((value, x) => {\r\n          if (value !== 0) {\r\n            newStage[y + player.pos.y][x + player.pos.x] = [\r\n              value,\r\n              `${player.collided ? 'merged' : 'clear'}`,\r\n            ];\r\n          }\r\n        });\r\n      });\r\n      // Then check if we collided\r\n      if (player.collided) {\r\n        resetPlayer();\r\n        return clearRows(newStage);\r\n      }\r\n\r\n      return newStage;\r\n    };\r\n\r\n    setStage((prev) => updateStage(prev));\r\n  }, [player, resetPlayer]);\r\n\r\n  return [stage, setStage, rowsCleared];\r\n};\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = (rowsCleared) => {\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const linePoints = [40, 100, 300, 1200];\r\n\r\n  const calcScore = useCallback(() => {\r\n    if (rowsCleared > 0) {\r\n      setScore((prev) => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n      setRows((prev) => prev + rowsCleared);\r\n    }\r\n  }, [level, linePoints, rowsCleared]);\r\n\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [calcScore, rowsCleared, score]);\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel];\r\n};\r\n","import React, { useState } from 'react';\r\nimport { createStage, checkCollision } from '../gameHelpers';\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\r\n\r\n//Components\r\nimport Stage from './Stage';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\n\r\n//hooks\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useStage } from '../hooks/useStage';\r\nimport { useInterval } from '../hooks/useInterval';\r\nimport { useGameStatus } from '../hooks/useGameStatus';\r\n\r\nconst Tetris = () => {\r\n  const [dropTime, setDropTime] = useState(null);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n  const [score, setScore, rows, setRows, level, setLevel] =\r\n    useGameStatus(rowsCleared);\r\n\r\n  console.log('re-render');\r\n\r\n  const movePlayer = (dir) => {\r\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\r\n      updatePlayerPos({ x: dir, y: 0 });\r\n    }\r\n  };\r\n\r\n  const startGame = () => {\r\n    console.log('test');\r\n    //Reset Everything\r\n    setStage(createStage());\r\n    setDropTime(1000);\r\n    resetPlayer();\r\n    setGameOver(false);\r\n    setScore(0);\r\n    setRows(0);\r\n    setLevel(0);\r\n  };\r\n\r\n  const drop = () => {\r\n    if (rows > (level + 1) * 10) {\r\n      setLevel((prev) => prev + 1);\r\n      setDropTime(1000 / (level + 1) + 200);\r\n    }\r\n\r\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\r\n      updatePlayerPos({ x: 0, y: 1, collided: false });\r\n    } else {\r\n      if (player.pos.y < 1) {\r\n        console.log('Game Over');\r\n        setGameOver(true);\r\n        setDropTime(null);\r\n      }\r\n      updatePlayerPos({ x: 0, y: 0, collided: true });\r\n    }\r\n  };\r\n\r\n  const keyUp = ({ keyCode }) => {\r\n    console.log('interval off');\r\n\r\n    if (!gameOver) {\r\n      if (keyCode === 40) {\r\n        setDropTime(1000 / (level + 1) + 200);\r\n      }\r\n    }\r\n  };\r\n\r\n  const dropPlayer = () => {\r\n    console.log('interval off');\r\n    setDropTime(null);\r\n    drop();\r\n  };\r\n\r\n  const move = ({ keyCode }) => {\r\n    if (!gameOver) {\r\n      if (keyCode === 37) {\r\n        movePlayer(-1);\r\n      } else if (keyCode === 39) {\r\n        movePlayer(1);\r\n      } else if (keyCode === 40) {\r\n        dropPlayer();\r\n      } else if (keyCode === 38) {\r\n        playerRotate(stage, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  useInterval(() => {\r\n    drop();\r\n  }, dropTime);\r\n\r\n  return (\r\n    <StyledTetrisWrapper\r\n      role='button'\r\n      tabIndex='0'\r\n      onKeyDown={(e) => move(e)}\r\n      onKeyUp={keyUp}\r\n    >\r\n      <StyledTetris>\r\n        <Stage stage={stage} />\r\n        <aside>\r\n          {gameOver ? (\r\n            <Display gameOver={gameOver} text='Game Over' />\r\n          ) : (\r\n            <div>\r\n              <Display text={`Score: ${score}`} />\r\n              <Display text={`Rows: ${rows}`} />\r\n              <Display text={`Level: ${level}`} />\r\n            </div>\r\n          )}\r\n          <StartButton callback={startGame} />\r\n        </aside>\r\n      </StyledTetris>\r\n    </StyledTetrisWrapper>\r\n  );\r\n};\r\n\r\nexport default Tetris;\r\n","import { useState, useCallback } from 'react';\r\nimport { checkCollision, STAGE_WIDTH } from '../gameHelpers';\r\n\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\r\n\r\nexport const usePlayer = () => {\r\n  const [player, setPlayer] = useState({\r\n    pos: { x: 0, y: 0 },\r\n    tetromino: TETROMINOS[0].shape,\r\n    collided: false,\r\n  });\r\n\r\n  const rotate = (matrix, dir) => {\r\n    //make the rows to become cols (transpose)\r\n    const rotatedTetro = matrix.map((_, index) =>\r\n      matrix.map((col) => col[index])\r\n    );\r\n    if (dir > 0) return rotatedTetro.map((row) => row.reverse());\r\n    return rotatedTetro.reverse();\r\n  };\r\n\r\n  const playerRotate = (stage, dir) => {\r\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    const pos = clonedPlayer.pos.x;\r\n    let offset = 1;\r\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n      clonedPlayer.pos.x += offset;\r\n      offset = -(offset + (offset > 0 ? 1 : -1));\r\n      if (offset > clonedPlayer.tetromino[0].length) {\r\n        rotate(clonedPlayer.tetromino, -dir);\r\n        clonedPlayer.pos.x = pos;\r\n        return;\r\n      }\r\n    }\r\n\r\n    setPlayer(clonedPlayer);\r\n  };\r\n\r\n  const updatePlayerPos = ({ x, y, collided }) => {\r\n    setPlayer((prev) => ({\r\n      ...prev,\r\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n      collided,\r\n    }));\r\n  };\r\n\r\n  const resetPlayer = useCallback(() => {\r\n    setPlayer({\r\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\r\n      tetromino: randomTetromino().shape,\r\n      collided: false,\r\n    });\r\n  }, []);\r\n\r\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\r\n};\r\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className='App'>\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}